version: "3.7"

volumes: 
  customers_db_data:
  products_db_data:
  rabbitmq_data:

networks: 
  frontend:
    ipam:
      driver: default
      config: 
        - subnet: "172.16.240.0/24"
  backend:
    ipam: 
      driver: default
      config: 
        - subnet: "172.16.241.0/24"
  
services:
  # queue:
  #   container_name: queue
  #   image: rabbitmq:3.8-rc-management
  #   ports:
  #     - 5672:5672
  #     - 15672:15672
  #   environment: 
  #     - RABBITMQ_DEFAULT_USER=$USER
  #     - RABBITMQ_DEFAULT_PASS=$USER
  #   volumes: 
  #     - type: volume
  #       source: rabbitmq_data
  #       target: /var/lib/rabbitmq
  #   restart: on-failure
  customers:
    container_name: customers
    image: msimou/customers:distributed-transactions
    build:
      context: ./services/customers
      dockerfile: ./deployments/dockerfile
      args:
        - DB_URI=postgresql://$USER:$USER@customers_db:5432/customers?sslmode=disable
    ports:
      - 3000:3000
    environment: 
      - PORT=3000
      - GO_ENV=development
      - DB_URI=postgresql://$USER:$USER@customers_db:5432/customers?sslmode=disable
    networks: 
      backend:
        ipv4_address: "172.16.241.10"
    extra_hosts: 
      - localhost.ecommerce.com:172.16.241.12
    volumes: 
      - type: bind
        source: $PWD/services/customers
        target: /go/src/app
    depends_on: 
      - customers_db
      # - queue
    restart: on-failure
  customers_db:
    container_name: customers_db
    image: postgres:12
    ports:
      - 5432:5432
    environment: 
      - POSTGRES_PASSWORD=$USER
      - POSTGRES_USER=$USER
      - POSTGRES_DB=customers
    networks: 
      - backend
    volumes:
      - type: volume
        source: customers_db_data
        target: /var/lib/postgresql/data
    restart: on-failure
  products:
    container_name: products
    image: msimou/products:distributed-transactions
    build:
      context: ./services/products
      dockerfile: ./deployments/dockerfile
      args: 
        - DB_URI=postgresql://$USER:$USER@products_db:5432/products?sslmode=disable
    ports:
      - 4000:4000
    environment: 
      - PORT=4000
      - GIN_MODE=debug
      - DB_URI=postgresql://$USER:$USER@products_db:5432/products?sslmode=disable
    networks: 
      backend:
        ipv4_address: "172.16.241.11" 
    extra_hosts: 
      - localhost.ecommerce.com:172.16.241.12
    volumes: 
      - type: bind
        source: $PWD/services/products
        target: /go/src/app
    depends_on: 
      - products_db
      # - queue
    restart: on-failure
  products_db:
    container_name: products_db
    image: postgres:12
    ports:
      - 5433:5432
    environment: 
      - POSTGRES_PASSWORD=$USER
      - POSTGRES_USER=$USER
      - POSTGRES_DB=products
    networks: 
      - backend
    volumes:
      - type: volume
        source: products_db_data
        target: /var/lib/postgresql/data
    restart: on-failure
  ui:
    container_name: ui
    image: msimou/ui:distributed-transactions
    build: 
      context: ./services/ui
      dockerfile: deployments/dockerfile
    stdin_open: true
    tty: true
    ports: 
      - 8080:3000
    environment: 
      - NODE_ENV=development
      - REACT_APP_CUSTOMERS_API=http://172.16.241.10:3000
      - REACT_APP_PRODUCTS_API=http://172.16.241.11:4000
    networks: 
      backend:
        ipv4_address: "172.16.241.12"
      frontend:
        ipv4_address: "172.16.240.10"
    restart: on-failure
    volumes: 
      - type: bind
        source: $PWD/services/ui
        target: /app
    depends_on: 
      - products
      - customers